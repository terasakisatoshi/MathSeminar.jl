Sending build context to Docker daemon  6.905MB
Step 1/19 : FROM julia:1.6.3
1.6.3: Pulling from library/julia
b380bbd43752: Already exists
b9b8d869efae: Already exists
c5bb6b59a073: Already exists
Digest: sha256:7ad7e4c153714ddec04d3caff9f18ff18203fe854539ca6e174a8bc36c3c200f
Status: Downloaded newer image for julia:1.6.3
 ---> ac8cdc518243
Step 2/19 : RUN apt-get update &&     apt-get install -y     build-essential     cmake     curl     ca-certificates     xvfb     dvipng     texlive-latex-recommended      zip     libxt6 libxrender1 libxext6 libgl1-mesa-glx libqt5widgets5 # GR &&     apt-get clean && rm -rf /var/lib/apt/lists/* # clean up
 ---> Using cache
 ---> 5fd975ee482b
Step 3/19 : RUN curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
 ---> Using cache
 ---> a203eec872d7
Step 4/19 : ENV PATH /root/.cargo/bin:$PATH
 ---> Using cache
 ---> 699af11effcd
Step 5/19 : ENV GKSwstype=100
 ---> Using cache
 ---> c8f9bb4b2633
Step 6/19 : ENV JULIA_NUM_THREADS=8
 ---> Using cache
 ---> 917e03016d7e
Step 7/19 : RUN mkdir -p ${HOME}/.julia/config &&     echo 'ENV["R_HOME"]="*" \nENV["PYTHON"]="" \n' >> ${HOME}/.julia/config/startup.jl && cat ${HOME}/.julia/config/startup.jl
 ---> Using cache
 ---> 7f7fec0722ae
Step 8/19 : RUN julia -e 'using Pkg; Pkg.add(["PyCall", "Conda"]); using PyCall, Conda;using Conda; Conda.add(["matplotlib", "sympy", "numpy", "numba" ]); Pkg.add(["Documenter", "Literate", "Weave", "Franklin", "NodeJS", "Remark"]); '
 ---> Using cache
 ---> b8d71281f2df
Step 9/19 : RUN julia -e "using NodeJS; run(\`\$(npm_cmd()) install highlight.js\`); using Franklin"
 ---> Using cache
 ---> 80e34da98584
Step 10/19 : ENV PATH /root/.julia/conda/3/bin:$PATH
 ---> Using cache
 ---> e71ae445d348
Step 11/19 : RUN	conda install r-base &&     julia -e 'using Pkg; pkg"add RCall"; Pkg.build("RCall"); using RCall'
 ---> Using cache
 ---> eb30d4ecc293
Step 12/19 : WORKDIR /work
 ---> Using cache
 ---> ce8b990a918f
Step 13/19 : ENV JULIA_PROJECT=/work
 ---> Using cache
 ---> dac86297f78d
Step 14/19 : RUN julia -e 'using Pkg; Pkg.add([    PackageSpec(name="Franklin"),     PackageSpec(name="Revise"),     PackageSpec(name="Plots"),     PackageSpec(name="GR"),     PackageSpec(name="SymPy"),     PackageSpec(name="PyPlot"),     PackageSpec(name="ImageIO"),     PackageSpec(name="TestImages"),     PackageSpec(name="ImageMagick"), ]); Pkg.pin(["Franklin", "Revise", "Plots", "GR", "SymPy", "PyPlot", "ImageIO", "TestImages"]); using PyPlot, SymPy, TestImages ; testimage("c"); testimage("m"); '
 ---> Using cache
 ---> 1bc5f9fb82ed
Step 15/19 : COPY Project.toml /work
 ---> Using cache
 ---> 304bb2152eb1
Step 16/19 : COPY ./src/MyUtils.jl /work/src/MyUtils.jl
 ---> Using cache
 ---> 47372ef5907e
Step 17/19 : RUN rm -f /work/Manifest.toml && julia --project=/work -e 'using Pkg; Pkg.instantiate(); Pkg.precompile()' && julia -e 'using InteractiveUtils; versioninfo()'
 ---> Using cache
 ---> 728cd33e1598
Step 18/19 : EXPOSE 8000
 ---> Using cache
 ---> dd0cfdb5c877
Step 19/19 : CMD ["julia"]
 ---> Using cache
 ---> 23bf7c06a280
Successfully built 23bf7c06a280
Successfully tagged my_awesome_image:latest
